// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Scans Component should handle multiple display states, pending, error, fulfilled: error 1`] = `
<EmptyState
  className="quipucords-empty-state__alert"
>
  <Alert
    title="t(view.error, {})"
    variant="danger"
  >
    t(view.error-message, {"context":""})
  </Alert>
</EmptyState>
`;

exports[`Scans Component should handle multiple display states, pending, error, fulfilled: fulfilled 1`] = `
<div
  className="quipucords-content"
>
  <div
    className="quipucords-view-container"
  >
    <ViewToolbar
      lastRefresh={NaN}
      secondaryFields={
        <Tooltip
          content="t(table.tooltip, {"context":"merge-reports"})"
          delayShow={500}
          id={null}
          isPopover={false}
          placement="top"
        >
          <Button
            isDisabled={true}
            onClick={[Function]}
            variant="primary"
          >
            t(table.label, {"context":"merge-reports"})
          </Button>
        </Tooltip>
      }
      t={[Function]}
      useOnRefresh={[Function]}
      useSelector={[Function]}
      useToolbarFieldClear={[Function]}
      useToolbarFieldClearAll={[Function]}
      useView={[Function]}
    />
    <ViewPaginationRow
      totalResults={0}
      useOnPerPageSelect={[Function]}
      useOnSetPage={[Function]}
      useQuery={[Function]}
    />
    <div
      className="quipucords-list-container"
    >
      <Table
        ariaLabel={null}
        className=""
        columnHeaders={[]}
        componentClassNames={
          {
            "table": "quipucords-table",
            "td": "quipucords-table__td",
            "tdAction": "quipucords-table__td-action",
            "tdExpand": "quipucords-table__td-expand",
            "tdExpanded": "quipucords-table__td-expand-expanded",
            "tdExpandedContent": "quipucords-table__td-expand-content",
            "tdExpandedWrapper": "quipucords-table__td-expand-wrapper",
            "tdSelect": "quipucords-table__td-select",
            "th": "quipucords-table__th",
            "tr": "quipucords-table__tr",
            "trExpand": "quipucords-table__tr-expand",
            "trExpanded": "quipucords-table__tr-expand-expanded",
            "trExpandedContent": "quipucords-table__tr-expand-content",
          }
        }
        isBorders={true}
        isHeader={false}
        isStriped={false}
        onExpand={[Function]}
        onSelect={[Function]}
        onSort={null}
        rows={
          [
            {
              "cells": [
                {
                  "content": <Grid
                    hasGutter={false}
                  >
                    <GridItem
                      sm={2}
                    />
                    <GridItem
                      sm={10}
                    >
                      <div>
                        <strong>
                          lorem
                        </strong>
                      </div>
                    </GridItem>
                  </Grid>,
                  "dataLabel": "t(table.header, {"context":"description"})",
                },
                {
                  "content": <Grid
                    hasGutter={false}
                  >
                    <GridItem
                      sm={2}
                    >
                      <ContextIcon
                        size="sm"
                        symbol={null}
                      />
                    </GridItem>
                    <GridItem
                      sm={10}
                    >
                      <div>
                        t(table.label, {"context":"status"})
                      </div>
                      a day ago
                    </GridItem>
                  </Grid>,
                  "dataLabel": "t(table.header, {"context":"scan"})",
                  "width": 20,
                },
                {
                  "content": <Tooltip
                    content="t(table.label_status_tooltip, {"context":"success","count":0})"
                    delayShow={500}
                    id={null}
                    isPopover={false}
                    placement="top"
                  >
                    t(table.label_status, {"context":"cell","count":0}, [object Object],[object Object])
                  </Tooltip>,
                  "dataLabel": "t(table.header, {"context":"success"})",
                  "expandedContent": undefined,
                  "isExpanded": false,
                  "width": 8,
                },
                {
                  "content": <Tooltip
                    content="t(table.label_status_tooltip, {"context":"failed","count":0})"
                    delayShow={500}
                    id={null}
                    isPopover={false}
                    placement="top"
                  >
                    t(table.label_status, {"context":"cell","count":0}, [object Object],[object Object])
                  </Tooltip>,
                  "dataLabel": "t(table.header, {"context":"failed"})",
                  "expandedContent": undefined,
                  "isExpanded": false,
                  "width": 8,
                },
                {
                  "content": <Tooltip
                    content="t(table.label_status_tooltip, {"context":"sources","count":0})"
                    delayShow={500}
                    id={null}
                    isPopover={false}
                    placement="top"
                  >
                    t(table.label_status, {"context":"cell","count":0}, [object Object],[object Object])
                  </Tooltip>,
                  "dataLabel": "t(table.header, {"context":"sources"})",
                  "expandedContent": undefined,
                  "isExpanded": false,
                  "width": 8,
                },
                {
                  "content": <Tooltip
                    content="t(table.label_status_tooltip, {"context":"scans","count":0})"
                    delayShow={500}
                    id={null}
                    isPopover={false}
                    placement="top"
                  >
                    t(table.label_status, {"context":"cell","count":0}, [object Object],[object Object])
                  </Tooltip>,
                  "dataLabel": "t(table.header, {"context":"scan-jobs"})",
                  "expandedContent": undefined,
                  "isExpanded": false,
                  "noPadding": true,
                  "width": 8,
                },
                {
                  "content": <OverflowMenu
                    breakpoint="lg"
                  >
                    <OverflowMenuContent>
                      <OverflowMenuGroup
                        groupType="button"
                      >
                        <Tooltip
                          content="t(table.label, {"context":"delete"})"
                          delayShow={500}
                          id={null}
                          isPopover={false}
                          placement="top"
                        >
                          <Button
                            aria-label="t(table.label, {"context":"delete"})"
                            className="quipucords-view__row-button"
                            onClick={[Function]}
                            variant="plain"
                          >
                            <TrashIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                            />
                          </Button>
                        </Tooltip>
                      </OverflowMenuGroup>
                    </OverflowMenuContent>
                    <OverflowMenuControl>
                      <DropdownSelect
                        ariaLabel="Select option"
                        buttonVariant="plain"
                        className=""
                        direction="down"
                        id="generatedid-"
                        isDisabled={false}
                        isDropdownButton={true}
                        isInline={true}
                        isToggleText={true}
                        maxHeight={null}
                        name={null}
                        onSelect={[Function]}
                        options={
                          [
                            {
                              "title": "t(table.label, {"context":"delete"})",
                              "value": "delete",
                            },
                          ]
                        }
                        placeholder={
                          <EllipsisVIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          />
                        }
                        position="right"
                        selectedOptions={null}
                        splitButtonVariant={null}
                        toggleIcon={null}
                        variant="single"
                      />
                    </OverflowMenuControl>
                  </OverflowMenu>,
                  "isActionCell": true,
                  "style": {
                    "textAlign": "right",
                  },
                },
              ],
              "isSelected": false,
              "item": {
                "id": "1",
                "name": "lorem",
              },
            },
          ]
        }
        summary={null}
        variant="compact"
      >
        <EmptyState
          className="quipucords-empty-state"
          variant="large"
        >
          <EmptyStateIcon
            icon={[Function]}
          />
          <Title
            headingLevel="h1"
            size="lg"
          >
            t(view.empty-state_filter, {"context":"title"})
          </Title>
          <EmptyStateBody>
            t(view.empty-state_filter, {"context":"description"})
          </EmptyStateBody>
          <EmptyStatePrimary>
            <Button
              onClick={[Function]}
              variant="link"
            >
              t(view.empty-state_label, {"context":"clear"})
            </Button>
          </EmptyStatePrimary>
        </EmptyState>
      </Table>
    </div>
  </div>
</div>
`;

exports[`Scans Component should handle multiple display states, pending, error, fulfilled: pending 1`] = `
<Modal
  aria-label={null}
  backdrop={false}
  className={null}
  disableFocusTrap={true}
  footer={null}
  header={null}
  isContentOnly={false}
  isOpen={true}
  position="top"
  positionOffset="5%"
  showClose={false}
  t={[Function]}
  variant="medium"
>
  <Bullseye>
    <Spinner
      isSVG={true}
      size="lg"
    />
       
    t(view.loading, {})
  </Bullseye>
</Modal>
`;

exports[`Scans Component should render a basic component: basic 1`] = `
<div
  className="quipucords-content"
>
  <div
    className="quipucords-view-container"
  >
    <div
      className="quipucords-list-container"
    >
      <Table
        ariaLabel={null}
        className=""
        columnHeaders={[]}
        componentClassNames={
          {
            "table": "quipucords-table",
            "td": "quipucords-table__td",
            "tdAction": "quipucords-table__td-action",
            "tdExpand": "quipucords-table__td-expand",
            "tdExpanded": "quipucords-table__td-expand-expanded",
            "tdExpandedContent": "quipucords-table__td-expand-content",
            "tdExpandedWrapper": "quipucords-table__td-expand-wrapper",
            "tdSelect": "quipucords-table__td-select",
            "th": "quipucords-table__th",
            "tr": "quipucords-table__tr",
            "trExpand": "quipucords-table__tr-expand",
            "trExpanded": "quipucords-table__tr-expand-expanded",
            "trExpandedContent": "quipucords-table__tr-expand-content",
          }
        }
        isBorders={true}
        isHeader={false}
        isStriped={false}
        onExpand={[Function]}
        onSelect={[Function]}
        onSort={null}
        rows={[]}
        summary={null}
        variant="compact"
      >
        <ScansEmptyState
          t={[Function]}
          uiShortName="Quipucords"
          useDispatch={[Function]}
          useNavigate={[Function]}
          useSources={[Function]}
          useView={[Function]}
        />
      </Table>
    </div>
  </div>
</div>
`;

exports[`Scans Component should return an empty state when there are no scans: empty state, filtering active 1`] = `
<EmptyState
  className="quipucords-empty-state"
  variant="large"
>
  <EmptyStateIcon
    icon={[Function]}
  />
  <Title
    headingLevel="h1"
    size="lg"
  >
    t(view.empty-state_filter, {"context":"title"})
  </Title>
  <EmptyStateBody>
    t(view.empty-state_filter, {"context":"description"})
  </EmptyStateBody>
  <EmptyStatePrimary>
    <Button
      onClick={[Function]}
      variant="link"
    >
      t(view.empty-state_label, {"context":"clear"})
    </Button>
  </EmptyStatePrimary>
</EmptyState>
`;

exports[`Scans Component should return an empty state when there are no scans: empty state, no data 1`] = `
<div
  className="quipucords-content"
>
  <div
    className="quipucords-view-container"
  >
    <div
      className="quipucords-list-container"
    >
      <Table
        ariaLabel={null}
        className=""
        columnHeaders={[]}
        componentClassNames={
          {
            "table": "quipucords-table",
            "td": "quipucords-table__td",
            "tdAction": "quipucords-table__td-action",
            "tdExpand": "quipucords-table__td-expand",
            "tdExpanded": "quipucords-table__td-expand-expanded",
            "tdExpandedContent": "quipucords-table__td-expand-content",
            "tdExpandedWrapper": "quipucords-table__td-expand-wrapper",
            "tdSelect": "quipucords-table__td-select",
            "th": "quipucords-table__th",
            "tr": "quipucords-table__tr",
            "trExpand": "quipucords-table__tr-expand",
            "trExpanded": "quipucords-table__tr-expand-expanded",
            "trExpandedContent": "quipucords-table__tr-expand-content",
          }
        }
        isBorders={true}
        isHeader={false}
        isStriped={false}
        onExpand={[Function]}
        onSelect={[Function]}
        onSort={null}
        rows={[]}
        summary={null}
        variant="compact"
      >
        <ScansEmptyState
          t={[Function]}
          uiShortName="Quipucords"
          useDispatch={[Function]}
          useNavigate={[Function]}
          useSources={[Function]}
          useView={[Function]}
        />
      </Table>
    </div>
  </div>
</div>
`;
