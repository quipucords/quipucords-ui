// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RouterTypes should return specific properties: baseName 1`] = `"/client"`;

exports[`RouterTypes should return specific properties: routes 1`] = `
Array [
  Object {
    "element": <Context.Provider
      value={
        Object {
          "initialQuery": Object {
            "ordering": "name",
            "page": 1,
            "page_size": 10,
          },
          "toolbar": Object {
            "filterFields": Array [
              Object {
                "component": [Function],
                "selected": true,
                "title": [Function],
                "value": "search_by_name",
              },
              Object {
                "component": [Function],
                "title": [Function],
                "value": "search_credentials_by_name",
              },
              Object {
                "component": [Function],
                "title": [Function],
                "value": "source_type",
              },
            ],
            "sortFields": Array [
              Object {
                "selected": true,
                "title": [Function],
                "value": "name",
              },
              Object {
                "title": [Function],
                "value": "source_type",
              },
              Object {
                "isDefaultDescending": true,
                "title": [Function],
                "value": "most_recent_connect_scan__start_time",
              },
            ],
          },
          "viewId": "sources",
        }
      }
    >
      <Sources
        t={[Function]}
        useDispatch={[Function]}
        useGetSources={[Function]}
        useOnDelete={[Function]}
        useOnEdit={[Function]}
        useOnExpand={[Function]}
        useOnScan={[Function]}
        useOnSelect={[Function]}
        useOnShowAddSourceWizard={[Function]}
        useToolbarFieldClearAll={[Function]}
        useView={[Function]}
      />
    </Context.Provider>,
    "icon": [Function],
    "path": "/sources",
    "redirect": true,
    "title": "sources",
  },
  Object {
    "element": <Context.Provider
      value={
        Object {
          "initialQuery": Object {
            "ordering": "name",
            "page": 1,
            "page_size": 10,
            "scan_type": "inspect",
          },
          "toolbar": Object {
            "filterFields": Array [
              Object {
                "component": [Function],
                "selected": true,
                "title": [Function],
                "value": "search_by_name",
              },
              Object {
                "component": [Function],
                "title": [Function],
                "value": "search_sources_by_name",
              },
            ],
            "sortFields": Array [
              Object {
                "selected": true,
                "title": [Function],
                "value": "name",
              },
              Object {
                "isDefaultDescending": true,
                "title": [Function],
                "value": "most_recent_connect_scan__start_time",
              },
            ],
          },
          "viewId": "scans",
        }
      }
    >
      <Scans
        t={[Function]}
        useDispatch={[Function]}
        useGetScans={[Function]}
        useOnDelete={[Function]}
        useOnExpand={[Function]}
        useOnScanAction={[Function]}
        useOnSelect={[Function]}
        useToolbarFieldClearAll={[Function]}
        useView={[Function]}
      />
    </Context.Provider>,
    "icon": [Function],
    "path": "/scans",
    "title": "scans",
  },
  Object {
    "element": <Context.Provider
      value={
        Object {
          "initialQuery": Object {
            "ordering": "name",
            "page": 1,
            "page_size": 10,
          },
          "toolbar": Object {
            "filterFields": Array [
              Object {
                "component": [Function],
                "selected": true,
                "title": [Function],
                "value": "search_by_name",
              },
              Object {
                "component": [Function],
                "title": [Function],
                "value": "cred_type",
              },
            ],
            "sortFields": Array [
              Object {
                "selected": true,
                "title": [Function],
                "value": "name",
              },
              Object {
                "title": [Function],
                "value": "cred_type",
              },
            ],
          },
          "viewId": "credentials",
        }
      }
    >
      <Credentials
        t={[Function]}
        useGetCredentials={[Function]}
        useOnDelete={[Function]}
        useOnEdit={[Function]}
        useOnExpand={[Function]}
        useOnSelect={[Function]}
        useOnShowAddSourceWizard={[Function]}
        useToolbarFieldClearAll={[Function]}
        useView={[Function]}
      />
    </Context.Provider>,
    "icon": [Function],
    "path": "/credentials",
    "title": "credentials",
  },
]
`;
