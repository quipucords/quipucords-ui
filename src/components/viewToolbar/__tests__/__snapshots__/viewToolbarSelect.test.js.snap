// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ViewToolbarSelect Component should export select variants and related options: field variants, options 1`] = `
{
  "SelectFilterVariant": {
    "cred_type": "cred_type",
    "source_type": "source_type",
  },
  "SelectFilterVariantOptions": {
    "cred_type": [
      {
        "title": [Function],
        "value": "network",
      },
      {
        "title": [Function],
        "value": "openshift",
      },
      {
        "title": [Function],
        "value": "satellite",
      },
      {
        "title": [Function],
        "value": "vcenter",
      },
    ],
    "source_type": [
      {
        "title": [Function],
        "value": "network",
      },
      {
        "title": [Function],
        "value": "openshift",
      },
      {
        "title": [Function],
        "value": "satellite",
      },
      {
        "title": [Function],
        "value": "vcenter",
      },
    ],
  },
}
`;

exports[`ViewToolbarSelect Component should handle updating the view query through redux state with a component: dispatch type, component 1`] = `
[
  [
    [
      {
        "type": "RESET_PAGE",
        "viewId": undefined,
      },
      {
        "filter": "cred_type",
        "type": "SET_QUERY",
        "value": "network",
        "viewId": undefined,
      },
    ],
  ],
]
`;

exports[`ViewToolbarSelect Component should handle updating the view query through redux state with a hook: dispatch type, hook 1`] = `
[
  [
    [
      {
        "type": "RESET_PAGE",
        "viewId": undefined,
      },
      {
        "filter": "lorem filter",
        "type": "SET_QUERY",
        "value": "dolor sit",
        "viewId": undefined,
      },
    ],
  ],
]
`;

exports[`ViewToolbarSelect Component should render a basic component: basic 1`] = `
<DropdownSelect
  ariaLabel="t(toolbar.label_placeholder_filter, {"context":"cred_type"})"
  className=""
  data-test="toolbarSelect_cred_type"
  direction="down"
  id="generatedid-"
  isDisabled={false}
  isDropdownButton={false}
  isFlipEnabled={false}
  isInline={true}
  isToggleText={true}
  maxHeight={null}
  name={null}
  onSelect={[Function]}
  onSplitButton={[Function]}
  options={
    [
      {
        "title": [Function],
        "value": "network",
      },
      {
        "title": [Function],
        "value": "openshift",
      },
      {
        "title": [Function],
        "value": "satellite",
      },
      {
        "title": [Function],
        "value": "vcenter",
      },
    ]
  }
  placeholder="t(toolbar.label_placeholder_filter, {"context":"cred_type"})"
  position="left"
  selectedOptions={null}
  splitButtonVariant={null}
  toggleIcon={null}
  variant="single"
/>
`;
